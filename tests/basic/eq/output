1/1: Building EqTest (EqTest.idr)
EqTest> EqTest.eqImplMyNat : Eq MyNat
eqImplMyNat = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplMyNatFun (\x, y => not (x == y))
EqTest> EqTest.eqImplMyNatFun : MyNat -> MyNat -> Bool
eqImplMyNatFun MZ MZ = True
eqImplMyNatFun (MS a0_1) (MS a0_2) = a0_1 == a0_2
eqImplMyNatFun _ _ = False
EqTest> EqTest.eqImplFoo1 : Eq arg3648 => Eq (Foo1 arg3648)
eqImplFoo1 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo1Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo1Fun : Eq arg3648 => Foo1 arg3648 -> Foo1 arg3648 -> Bool
eqImplFoo1Fun Bor1 Bor1 = True
eqImplFoo1Fun _ _ = False
EqTest> EqTest.eqImplFoo2 : Eq arg3690 => Eq (Foo2 arg3690)
eqImplFoo2 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo2Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo2Fun : Eq arg3690 => Foo2 arg3690 -> Foo2 arg3690 -> Bool
eqImplFoo2Fun (Bor2 a0_1) (Bor2 a0_2) = a0_1 == a0_2
eqImplFoo2Fun _ _ = False
EqTest> EqTest.eqImplFoo4 : Eq arg3741 => Eq arg3742 => Eq (Foo4 arg3741 arg3742)
eqImplFoo4 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo4Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo4Fun : Eq arg3741 => Eq arg3742 => Foo4 arg3741 arg3742 -> Foo4 arg3741 arg3742 -> Bool
eqImplFoo4Fun (Bor4 a0_1) (Bor4 a0_2) = a0_1 == a0_2
eqImplFoo4Fun _ _ = False
EqTest> EqTest.eqImplFoo5 : Eq arg3814 => Eq arg3815 => Eq arg3816 => Eq (Foo5 arg3814 arg3815 arg3816)
eqImplFoo5 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo5Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo5Fun : Eq arg3814 => Eq arg3815 => Eq arg3816 => Foo5 arg3814 arg3815 arg3816 -> Foo5 arg3814 arg3815 arg3816 -> Bool
eqImplFoo5Fun (Bor5 a0_1 b0_1 c0_1) (Bor5 a0_2 b0_2 c0_2) = (a0_1 == a0_2) && Delay ((b0_1 == b0_2) && Delay (c0_1 == c0_2))
eqImplFoo5Fun _ _ = False
EqTest> EqTest.eqImplFoo7 : Eq arg3928 => Eq arg3929 => Eq arg3930 => Eq (Foo7 arg3928 arg3929 arg3930)
eqImplFoo7 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo7Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo7Fun : Eq arg3928 => Eq arg3929 => Eq arg3930 => Foo7 arg3928 arg3929 arg3930 -> Foo7 arg3928 arg3929 arg3930 -> Bool
eqImplFoo7Fun (Zor7 a0_1) (Zor7 a0_2) = a0_1 == a0_2
eqImplFoo7Fun (Gor7 a0_1) (Gor7 a0_2) = a0_1 == a0_2
eqImplFoo7Fun (Nor7A a0_1 b0_1) (Nor7A a0_2 b0_2) = (a0_1 == a0_2) && Delay (b0_1 == b0_2)
eqImplFoo7Fun (Nor7B a0_1 b0_1 c0_1) (Nor7B a0_2 b0_2 c0_2) = (a0_1 == a0_2) && Delay ((b0_1 == b0_2) && Delay (c0_1 == c0_2))
eqImplFoo7Fun Bor7 Bor7 = True
eqImplFoo7Fun _ _ = False
EqTest> EqTest.eqImplFoo7' : Eq arg4170 => Eq arg4171 => Eq arg4172 => Eq (Foo7' arg4170 arg4171 arg4172)
eqImplFoo7' = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo7'Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo7'Fun : Eq arg4170 => Eq arg4171 => Eq arg4172 => Foo7' arg4170 arg4171 arg4172 -> Foo7' arg4170 arg4171 arg4172 -> Bool
eqImplFoo7'Fun (Zor7' a0_1) (Zor7' a0_2) = a0_1 == a0_2
eqImplFoo7'Fun (Gor7' a0_1) (Gor7' a0_2) = a0_1 == a0_2
eqImplFoo7'Fun (Nor7' a0_1 b0_1) (Nor7' a0_2 b0_2) = (a0_1 == a0_2) && Delay (b0_1 == b0_2)
eqImplFoo7'Fun Bor7' Bor7' = True
eqImplFoo7'Fun _ _ = False
EqTest> EqTest.eqImplFooN : Eq arg4362 => Eq (FooN arg4361 arg4362)
eqImplFooN = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFooNFun (\x, y => not (x == y))
EqTest> EqTest.eqImplFooNFun : Eq arg4362 => FooN arg4361 arg4362 -> FooN arg4361 arg4362 -> Bool
eqImplFooNFun (BorZ a0_1) (BorZ a0_2) = a0_1 == a0_2
eqImplFooNFun (BorS a0_1) (BorS a0_2) = a0_1 == a0_2
eqImplFooNFun (BorNA a0_1 b0_1) (BorNA a0_2 b0_2) = (a0_1 == a0_2) && Delay (b0_1 == b0_2)
eqImplFooNFun (BorNB arg4361 b0_1) (BorNB arg4361 b0_2) = b0_1 == b0_2
eqImplFooNFun _ _ = False
EqTest> EqTest.eqImplFoo6 : Eq arg4490 => Eq arg4491 => Eq arg4492 => Eq (Foo6 arg4490 arg4491 arg4492 arg4493)
eqImplFoo6 = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo6Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo6Fun : Eq arg4490 => Eq arg4491 => Eq arg4492 => Foo6 arg4490 arg4491 arg4492 arg4493 -> Foo6 arg4490 arg4491 arg4492 arg4493 -> Bool
eqImplFoo6Fun (Zor6 a0_1 b0_1) (Zor6 a0_2 b0_2) = (a0_1 == a0_2) && Delay (b0_1 == b0_2)
eqImplFoo6Fun (Gor6 a0_1) (Gor6 a0_2) = a0_1 == a0_2
eqImplFoo6Fun (Nor6A a0_1 b0_1 c0_1) (Nor6A a0_2 b0_2 c0_2) = (a0_1 == a0_2) && Delay ((b0_1 == b0_2) && Delay (c0_1 == c0_2))
eqImplFoo6Fun (Nor6B a0_1 _ c0_1) (Nor6B a0_2 _ c0_2) = (a0_1 == a0_2) && Delay (c0_1 == c0_2)
eqImplFoo6Fun Bor6A Bor6A = True
eqImplFoo6Fun (Bor6B a0_1) (Bor6B a0_2) = a0_1 == a0_2
eqImplFoo6Fun (Wah6 a0_1 arg4493) (Wah6 a0_2 arg4493) = a0_1 == a0_2
eqImplFoo6Fun _ _ = False
EqTest> EqTest.eqImplFoo6' : Eq arg4853 => Eq arg4854 => Eq arg4855 => Eq (Foo6' arg4853 arg4854 arg4855 arg4856)
eqImplFoo6' = Eq at Prelude/EqOrd.idr:13:1--20:24 eqImplFoo6'Fun (\x, y => not (x == y))
EqTest> EqTest.eqImplFoo6'Fun : Eq arg4853 => Eq arg4854 => Eq arg4855 => Foo6' arg4853 arg4854 arg4855 arg4856 -> Foo6' arg4853 arg4854 arg4855 arg4856 -> Bool
eqImplFoo6'Fun (Zor6' a0_1 b0_1) (Zor6' a0_2 b0_2) = (a0_1 == a0_2) && Delay (b0_1 == b0_2)
eqImplFoo6'Fun (Gor6A' a0_1) (Gor6A' a0_2) = a0_1 == a0_2
eqImplFoo6'Fun (Gor6B' _ b0_1) (Gor6B' _ b0_2) = b0_1 == b0_2
eqImplFoo6'Fun (Nor6A' a0_1 b0_1 c0_1) (Nor6A' a0_2 b0_2 c0_2) = (a0_1 == a0_2) && Delay ((b0_1 == b0_2) && Delay (c0_1 == c0_2))
eqImplFoo6'Fun (Nor6B' a0_1 _ c0_1) (Nor6B' a0_2 _ c0_2) = (a0_1 == a0_2) && Delay (c0_1 == c0_2)
eqImplFoo6'Fun Bor6' Bor6' = True
eqImplFoo6'Fun (Wah6' a0_1 arg4856) (Wah6' a0_2 arg4856) = a0_1 == a0_2
eqImplFoo6'Fun (Kah6' a0_1 arg4856 _) (Kah6' a0_2 arg4856 _) = a0_1 == a0_2
eqImplFoo6'Fun (Pah6' a0_1 arg4856 c0_1 _) (Pah6' a0_2 arg4856 c0_2 _) = (a0_1 == a0_2) && Delay (c0_1 == c0_2)
eqImplFoo6'Fun _ _ = False
EqTest> EqTest> 
Bye for now!
